---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/503919/reviews?api_key=<TMDB_API_KEY>
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 29 Mar 2021 18:23:57 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      X-Memc:
      - HIT
      X-Memc-Key:
      - eb72a63a368ffdea0f5c8918ae995c818a21fde6
      X-Memc-Age:
      - '13710'
      X-Memc-Expires:
      - '7890'
      Etag:
      - W/"ba94377a6fd95ff360f482ca4e57012f"
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 9204cf44179493ed42c678800a26918b.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - uOP8htQRQ7h8JAbS4Xaah8QLtnWCBc5-EXjvrOJVSDGcKtXOIDJyDQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 29 Mar 2021 18:23:57 GMT
recorded_with: VCR 6.0.0
